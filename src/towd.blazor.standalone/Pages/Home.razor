@page "/"

<PageTitle>TOWD</PageTitle>

@if (!GetContext().IsClosed)
{
	<pre>
			@foreach (var line in lines)
			{
					@line.Item2
					@if (line.Item3)
					{
			<br />
					}
			}
		</pre>
	<pre>
		@prompt <br/>
		
			@foreach (var choice in choices)
		{
		<button @onclick="() => MakeChoice(choice)">@choice</button><br/>
		}
	</pre>
}

@code {

	private IEnumerable<(string Mood, string Text, bool EndsLine)> lines = Enumerable.Empty<(string Mood, string Text, bool EndsLine)>();
	private IEnumerable<string> choices = Enumerable.Empty<string>();
	private string prompt = string.Empty;


	private async Task<IEnumerable<(string Mood, string Text, bool EndsLine)>> GetLinesAsync()
	{
		return await GetContext().GetLinesAsync();
	}

	private towd.ui.IUIContext<towd.business.IWorld>? _context = null;

	private towd.ui.IUIContext<towd.business.IWorld> GetContext()
	{
		if(_context==null)
		{
			_context = new towd.ui.UIContext(new Persister());
		}

		return _context;
	}

	private void MakeChoice(string choice)
	{
		GetContext().Choose(choice);

		_ = Reload();
	}

	protected override async Task OnInitializedAsync()
	{
		await Reload();
	}

	private async Task Reload()
	{
		await LoadLinesAsync();
		choices = GetContext().GetChoices();
		prompt = GetContext().GetPrompt();
	}

	private async Task LoadLinesAsync()
	{
		lines = await GetLinesAsync();
	}
}
